"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformDMMF = transformDMMF;

var _constants = require("./constants");

var _helpers = require("./helpers");

var _jsonSchema = require("./jsonSchema");

var _model = require("./model");

function getPropertyDefinition({
  schemaId
}) {
  return model => {
    const ref = `${_constants.DEFINITIONS_ROOT}${model.name}`;
    return [(0, _helpers.toCamelCase)(model.name), {
      $ref: schemaId ? `${schemaId}${ref}` : ref
    }];
  };
}

function transformDMMF(dmmf, transformOptions = {}) {
  const {
    models,
    enums,
    types
  } = dmmf.datamodel;
  const initialJSON = (0, _jsonSchema.getInitialJSON)();
  const {
    schemaId
  } = transformOptions;
  const modelDefinitionsMap = models.map((0, _model.getJSONSchemaModel)({
    enums
  }, transformOptions));
  const typeDefinitionsMap = types.map((0, _model.getJSONSchemaModel)({
    enums
  }, transformOptions));
  const modelPropertyDefinitionsMap = models.map(getPropertyDefinition(transformOptions));
  const definitions = Object.fromEntries([...modelDefinitionsMap, ...typeDefinitionsMap]);
  const properties = Object.fromEntries(modelPropertyDefinitionsMap);
  return { ...(schemaId ? {
      $id: schemaId
    } : null),
    ...initialJSON,
    definitions,
    properties
  };
}